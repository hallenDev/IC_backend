type CanisterId = principal;
type NobleId = nat64;
type PostId = nat64;
type FileId = nat;
type TimestampMillis = nat64;

type Category = variant {
    GeneralDiscussion;
    Questions;
    IntroduceYourself;
    UserFeedback;
};

type PostPrivacy = variant {
    Everyone;
    Followers;
    SpecificUsers;
};

type NewPostArgs = record {
    jwt: text;
    title: text;
    description: text;
    category: Category;
    link_url: text;
    video_url: text;
    attached_file_id: FileId;
    post_privacy: PostPrivacy;
    invited_users: vec NobleId;
};

type NewPostResponse = variant {
    Success: record { CanisterId; PostId;};
    PermissionDenied;
    PostLimitReached;
    InternalError: text;
    Error: record {
        title: text;
        description: text;
    };
};

type GetPostsByCategoryArgs = record {
    jwt: text;
    from: nat32;
    limit: nat32;
    category: opt Category;
    sort: variant {
        RecentActivity;
        NewestPost;
    };
    following_list: vec NobleId;
    block_me_users: vec NobleId;
    liked_posts: vec PostId;
    bookmarks: vec PostId;
};

type PostSummary = record {
    post_id: PostId;
    noble_id: NobleId;
    title: text;
    description: text;
    category: Category;
    link_url: text;
    video_url: text;
    attached_file_id: FileId;
    liked_users_count: nat32;
    comments_count: nat32;
    date_created: TimestampMillis;
    date_last_commented: TimestampMillis;
    like_state: bool;
    bookmark_state: bool;
    loading_like: bool;
    loading_bookmark: bool;
    loading_delete: bool;
};

type GetPostsByCategoryResponse = variant {
    Success: record {
        total_posts_count: nat32;
        posts: vec PostSummary;
        timestamp: TimestampMillis;
    };
    PermissionDenied;
};

type GetPostInfoArgs = record {
    jwt: text;
    post_id: PostId;
};

type GetPostInfoResponse = variant {
    Success : record {
        post_id: PostId;
        local_post_canister_id: CanisterId;
    };
    PermissionDenied;
    PostNotFound;
};

type Version = record {
    major: nat32;
    minor: nat32;
    patch: nat32;
};

type InitArgs = record {
    user_index_canister_id: CanisterId;
    local_post_index_canister_ids: vec CanisterId;
    local_user_index_canister_ids: vec CanisterId;
    super_admin: principal;
    wasm_version: Version;
};

service: (args: InitArgs) -> {
    new_post : (NewPostArgs) -> (NewPostResponse);

    get_posts_by_category : (GetPostsByCategoryArgs) -> (GetPostsByCategoryResponse) query;

    get_post_info : (GetPostInfoArgs) -> (GetPostInfoResponse) query;
}
